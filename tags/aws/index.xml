<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aws on Sami Jaktholm</title>
    <link>https://sjakthol.github.io/tags/aws/</link>
    <description>Recent content in Aws on Sami Jaktholm</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://sjakthol.github.io/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>aws-s3-basic-auth</title>
      <link>https://sjakthol.github.io/projects/aws-s3-basic-auth/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sjakthol.github.io/projects/aws-s3-basic-auth/</guid>
      <description>The aws-s3-basic-auth project contains a setup for protecting access to S3 bucket with HTTP Basic Authentication.
The setup creates a CloudFront distribution for serving files from the target bucket. A custom Lambda@Edge function is used to authenticate all requests made to the CloudFront distribution. CloudFront authenticates itself to S3 using a custom Origin Access Identity which prevents direct access to the contents of S3.
The entire setup can be deployed through CloudFormation to protect access to any existing S3 bucket.</description>
    </item>
    
    <item>
      <title>aws-account-infra</title>
      <link>https://sjakthol.github.io/projects/aws-account-infra/</link>
      <pubDate>Sun, 10 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sjakthol.github.io/projects/aws-account-infra/</guid>
      <description>This projects contains an opinionated set of CloudFormation templates for an AWS infrastructure setup that contains the following components:
 CloudTrail audit log saved to Amazon S3 for long-term storage. IAM roles, policies, groups and users with MFA required for all access to AWS resources. KMS key for encrypting sensitive data. VPC with route tables that provide varying level of access to / from the public internet over IPv4 and IPv6.</description>
    </item>
    
    <item>
      <title>aws-kms-crypt</title>
      <link>https://sjakthol.github.io/projects/aws-kms-crypt/</link>
      <pubDate>Sun, 10 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sjakthol.github.io/projects/aws-kms-crypt/</guid>
      <description>aws-kms-crypt is a cross-language utility for managing application secrets within AWS using the KMS service. The key features of this tool are:
 Simple APIs for encrypting and decrypting sensitive data Interoperable implementations for multiple languages (Bash, Node and Python) Envelope Encryption with AES-128-CBC and KMS generated data keys. That is, all secret data is encrypted locally and never sent to Amazon in plain text.  Installation  Node.js module in NPM: https://www.</description>
    </item>
    
    <item>
      <title>cfn-monitor</title>
      <link>https://sjakthol.github.io/projects/cfn-monitor/</link>
      <pubDate>Sun, 10 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://sjakthol.github.io/projects/cfn-monitor/</guid>
      <description> cfn-monitor is a command line utility for monitoring the progress of CloudFormation stack operations. The tool parses the output of the AWS CLI create-stack and update-stack commands, listens for the stack events of the affected stacks and prints them out to the terminal as they occur.
This utility requires Node.js and can be installed with npm:
npm install -g cfn-monitor  Links  Package in NPM: https://www.npmjs.com/package/cfn-monitor  </description>
    </item>
    
  </channel>
</rss>